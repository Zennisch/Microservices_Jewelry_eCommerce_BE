version: '3.8'

services:
    # PostgreSQL Database
    postgres:
        image: postgres:latest
        container_name: postgres_jec
        environment:
            POSTGRES_USER: jec_admin
            POSTGRES_PASSWORD: jec_admin
            POSTGRES_DB: JEC
        expose:
            - '6543'
        ports:
            - '6543:6543'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        command: -p 6543
        networks:
            - jec-network
        
    # Redis for caching
    redis:
        image: redis:latest
        ports:
          - "6379:6379"
        networks:
            - jec-network
    
    # Service Account (Spring Boot with Gradle)
    service-account:
        build: 
            context: ./Service_Account/Service_Account_Backend
            dockerfile: Dockerfile.dev
        container_name: service-account
        ports:
            - "8001:8001"
        depends_on:
            - postgres
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:6543/JEC
            - SPRING_DATASOURCE_USERNAME=jec_admin
            - SPRING_DATASOURCE_PASSWORD=jec_admin
            - APP_FRONTEND_URL=http://localhost:3000
            - APP_OAUTH2_SUCCESS_URL=http://localhost:3000/login/success
            - APP_CORS_ALLOWED_ORIGINS=http://localhost:3000
        volumes:
            - ./Service_Account/Service_Account_Backend:/app
            - service-account-gradle:/root/.gradle
            - uploads_account:/app/uploads/avatars
        networks:
            - jec-network
            
    # Service Catalog (Spring Boot with Gradle)
    service-catalog:
        build: 
            context: ./Service_Catalog/Service_Catalog_Backend
            dockerfile: Dockerfile.dev
        container_name: service-catalog
        ports:
            - "8005:8005"
        depends_on:
            - service-account
            - postgres
            - redis
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:6543/JEC
            - SPRING_DATASOURCE_USERNAME=jec_admin
            - SPRING_DATASOURCE_PASSWORD=jec_admin
            - SPRING_REDIS_HOST=redis
            - SPRING_REDIS_PORT=6379
        volumes:
            - ./Service_Catalog/Service_Catalog_Backend:/app
            - service-catalog-gradle:/root/.gradle
            - uploads_products:/app/uploads/products
        networks:
            - jec-network
            
    # Service Cart/Order (Node.js)
    service-cart-order:
        build: 
            context: ./Service_Cart_Order/Service_Cart_Order_Backend
            dockerfile: Dockerfile.dev
        container_name: service-cart-order
        ports:
            - "8006:8006"
        depends_on:
            - service-catalog
            - postgres
        environment:
            - DB_HOST=postgres
            - DB_PORT=6543
            - DB_NAME=JEC
            - DB_USER=jec_admin
            - DB_PASSWORD=jec_admin
        volumes:
            - ./Service_Cart_Order/Service_Cart_Order_Backend:/app
            - service-cart-order-node_modules:/app/node_modules
        networks:
            - jec-network
            
    # Service Manager (Spring Boot with Maven)
    service-manager:
        build: 
            context: ./Service_Manager
            dockerfile: Dockerfile.dev
        container_name: service-manager
        ports:
            - "8003:8003"
        depends_on:
            - service-cart-order
            - postgres
            - redis
        environment:
            - SPRING_PROFILES_ACTIVE=dev
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:6543/JEC
            - SPRING_DATASOURCE_USERNAME=jec_admin
            - SPRING_DATASOURCE_PASSWORD=jec_admin
        volumes:
            - ./Service_Manager:/app
            - service-manager-m2:/root/.m2
        networks:
            - jec-network
            
    # API Gateway - Starts last after all services
    api-gateway:
        build: 
            context: ./API_Gateway/api-gateway
            dockerfile: Dockerfile.dev
        container_name: api-gateway
        ports:
            - "8000:8000"
        depends_on:
            - service-account
            - service-manager
            - service-catalog
            - service-cart-order
        environment:
            - PORT=8000
        volumes:
            - ./API_Gateway/api-gateway:/app
            - api-gateway-node_modules:/app/node_modules
            - api-gateway-logs:/app/logs
        networks:
            - jec-network

networks:
    jec-network:
        driver: bridge

volumes:
    postgres_data:
    uploads_products:
    uploads_account:
    service-manager-m2:
    service-account-gradle:
    service-catalog-gradle:
    service-cart-order-node_modules:
    api-gateway-node_modules:
    api-gateway-logs: